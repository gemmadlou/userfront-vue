{"version":3,"file":"userfront-vue.js","sources":["../src/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport AnyMod from \"@anymod/core\";\nimport Core from \"@userfront/core\";\n\nconst {\n  Singleton,\n  alias,\n  render,\n  processPage,\n  addScript1ToDocument,\n  createOrReturnPage,\n  checkPageAndUpdate,\n  executeCallbacks,\n  logErrorsAndTips,\n} = AnyMod;\n\nconst { registerUrlChangedEventListener, addInitCallback } = Core;\nalias.setAlias(\"Userfront\");\n\nSingleton.Opts.api = true;\n\n/**\n * The order of operations is:\n *  1. Userfront.init() is called\n *  2. Callback is fired that adds Script1 to document and sets Singleton.isScript1Loading = true\n *  3. Userfront.build() is called\n *  4. componentDidMount() is called\n *  5. mountTools() is called\n *  6a. If Script1 hasn't loaded yet, wait for it to load\n *  6b. If Script1 has loaded, continue\n *  7. runAnyModSetup() is called\n */\n\n// Callback to fire whenever Userfront.init is called\naddInitCallback(({ tenantId }) => {\n  Singleton.External.project = tenantId;\n  addScript1ToDocument(\n    \"https://cdn.userfront.com/toolkit/page/\",\n    tenantId,\n    runAnyModSetup\n  );\n});\n\nregisterUrlChangedEventListener();\n\nwindow.addEventListener(\"urlchanged\", render);\n\nasync function runAnyModSetup() {\n  if (Singleton.isScript1Loading) return;\n  const page = await createOrReturnPage();\n  const updatedPage = await checkPageAndUpdate(page);\n  await processPage(updatedPage);\n  executeCallbacks();\n  logErrorsAndTips();\n}\n\nasync function mountTools() {\n  try {\n    runAnyModSetup();\n  } catch (err) {\n    let message = err && err.message ? err.message : \"Problem loading page\";\n    console.warn(message, err);\n  }\n}\n\nexport function build(name) {\n  return Vue.component(name, {\n    template: '<div><div :id=\"`userfront-${toolId}`\"></div></div>',\n    props: {\n      toolId: {\n        type: String,\n        // required: true,\n      },\n    },\n    async mounted() {\n      await mountTools();\n    },\n  });\n}\n\nexport const SignupForm = build(\"signup-form\");\nexport const LoginForm = build(\"login-form\");\nexport const PasswordResetForm = build(\"password-reset-form\");\nexport const LogoutButton = build(\"logout-button\");\n\nexport const Userfront = {\n  build,\n  SignupForm,\n  LoginForm,\n  PasswordResetForm,\n  LogoutButton,\n};\n\nfor (const attr in Core) {\n  if (!Userfront[attr]) Userfront[attr] = Core[attr];\n}\n\nexport default Userfront;\n"],"names":["runAnyModSetup","Singleton","isScript1Loading","createOrReturnPage","page","checkPageAndUpdate","updatedPage","processPage","executeCallbacks","logErrorsAndTips","alias","render","addScript1ToDocument","AnyMod","registerUrlChangedEventListener","addInitCallback","Core","build","name","Vue","component","template","props","toolId","type","String","mounted","err","console","warn","message","mountTools","setAlias","Opts","api","tenantId","External","project","window","addEventListener","SignupForm","LoginForm","PasswordResetForm","LogoutButton","Userfront","attr"],"mappings":"iKA+CeA,iBACb,OAAIC,EAAUC,mDACKC,mBAAbC,0BACoBC,EAAmBD,kBAAvCE,0BACAC,EAAYD,oBAClBE,IACAC,+CAjDIR,UACJA,EADIS,MAEJA,EAFIC,OAGJA,EAHIJ,YAIJA,EAJIK,qBAKJA,EALIT,mBAMJA,EANIE,mBAOJA,EAPIG,iBAQJA,EARIC,iBASJA,GACEI,GAEEC,gCAAEA,EAAFC,gBAAmCA,GAAoBC,WAiD7CC,EAAMC,GACpB,OAAOC,EAAIC,UAAUF,EAAM,CACzBG,SAAU,qDACVC,MAAO,CACLC,OAAQ,CACNC,KAAMC,SAIJC,6DAjBR,IACE1B,IACA,MAAO2B,GAEPC,QAAQC,KADMF,GAAOA,EAAIG,QAAUH,EAAIG,QAAU,uBAC3BH,GALE,4DAmBhBI,uBATiB,sCAjD7BrB,EAAMsB,SAAS,aAEf/B,EAAUgC,KAAKC,KAAM,EAerBnB,EAAgB,EAAGoB,SAAAA,MACjBlC,EAAUmC,SAASC,QAAUF,EAC7BvB,EACE,0CACAuB,EACAnC,KAIJc,IAEAwB,OAAOC,iBAAiB,aAAc5B,GAmCzB6B,MAAAA,EAAavB,EAAM,eACnBwB,EAAYxB,EAAM,cAClByB,EAAoBzB,EAAM,uBAC1B0B,EAAe1B,EAAM,iBAErB2B,EAAY,CACvB3B,MAAAA,EACAuB,WAAAA,EACAC,UAAAA,EACAC,kBAAAA,EACAC,aAAAA,GAGF,IAAK,MAAME,KAAQ7B,EACZ4B,EAAUC,KAAOD,EAAUC,GAAQ7B,EAAK6B"}