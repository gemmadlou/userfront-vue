{"version":3,"file":"userfront-vue.modern.js","sources":["../src/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport AnyMod from \"@anymod/core\";\nimport Core from \"@userfront/core\";\n\nconst {\n  Singleton,\n  alias,\n  render,\n  processPage,\n  addScript1ToDocument,\n  createOrReturnPage,\n  checkPageAndUpdate,\n  executeCallbacks,\n  logErrorsAndTips,\n} = AnyMod;\n\nconst { registerUrlChangedEventListener, addInitCallback } = Core;\nalias.setAlias(\"Userfront\");\n\nSingleton.Opts.api = true;\n\n/**\n * The order of operations is:\n *  1. Userfront.init() is called\n *  2. Callback is fired that adds Script1 to document and sets Singleton.isScript1Loading = true\n *  3. Userfront.build() is called\n *  4. componentDidMount() is called\n *  5. mountTools() is called\n *  6a. If Script1 hasn't loaded yet, wait for it to load\n *  6b. If Script1 has loaded, continue\n *  7. runAnyModSetup() is called\n */\n\n// Callback to fire whenever Userfront.init is called\naddInitCallback(({ tenantId }) => {\n  Singleton.External.project = tenantId;\n  addScript1ToDocument(\n    \"https://mod.userfront.com/v3/page/\",\n    tenantId,\n    runAnyModSetup\n  );\n});\n\nregisterUrlChangedEventListener();\n\nwindow.addEventListener(\"urlchanged\", render);\n\nasync function runAnyModSetup() {\n  if (Singleton.isScript1Loading) return;\n  try {\n    const page = await createOrReturnPage();\n    console.log(\"HERE\", page);\n    const updatedPage = await checkPageAndUpdate(page);\n    await processPage(updatedPage);\n    executeCallbacks();\n    logErrorsAndTips();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function mountTools() {\n  try {\n    runAnyModSetup();\n  } catch (err) {\n    let message = err && err.message ? err.message : \"Problem loading page\";\n    console.warn(message, err);\n  }\n}\n\nconst Userfront = {\n  build({ toolName, toolId }) {\n    return Vue.component(toolName, {\n      template: `<div><div id=\"userfront-${toolId}\"></div></div>`,\n      async mounted() {\n        await mountTools();\n      },\n    });\n  },\n};\n\nfor (const attr in Core) {\n  if (!Userfront[attr]) Userfront[attr] = Core[attr];\n}\n\nexport default Userfront;\n"],"names":["Singleton","alias","render","processPage","addScript1ToDocument","createOrReturnPage","checkPageAndUpdate","executeCallbacks","logErrorsAndTips","AnyMod","registerUrlChangedEventListener","addInitCallback","Core","async","runAnyModSetup","isScript1Loading","page","console","log","updatedPage","error","setAlias","Opts","api","tenantId","External","project","window","addEventListener","Userfront","build","toolName","toolId","Vue","component","template","[object Object]","err","warn","message","mountTools","attr"],"mappings":"8EAIA,MAAMA,UACJA,EADIC,MAEJA,EAFIC,OAGJA,EAHIC,YAIJA,EAJIC,qBAKJA,EALIC,mBAMJA,EANIC,mBAOJA,EAPIC,iBAQJA,EARIC,iBASJA,GACEC,GAEEC,gCAAEA,EAAFC,gBAAmCA,GAAoBC,EA+B7DC,eAAeC,IACb,IAAId,EAAUe,iBACd,IACE,MAAMC,QAAaX,IACnBY,QAAQC,IAAI,OAAQF,GACpB,MAAMG,QAAoBb,EAAmBU,SACvCb,EAAYgB,GAClBZ,IACAC,IACA,MAAOY,GACPH,QAAQC,IAAIE,IAxChBnB,EAAMoB,SAAS,aAEfrB,EAAUsB,KAAKC,KAAM,EAerBZ,EAAgB,EAAGa,SAAAA,MACjBxB,EAAUyB,SAASC,QAAUF,EAC7BpB,EACE,qCACAoB,EACAV,KAIJJ,IAEAiB,OAAOC,iBAAiB,aAAc1B,GAyBtC,MAAM2B,EAAY,CAChBC,MAAK,EAACC,SAAEA,EAAFC,OAAYA,KACTC,EAAIC,UAAUH,EAAU,CAC7BI,SAAW,2BAA0BH,kBACrCI,sBAbNvB,iBACE,IACEC,IACA,MAAOuB,GAEPpB,QAAQqB,KADMD,GAAOA,EAAIE,QAAUF,EAAIE,QAAU,uBAC3BF,IASZG,OAMd,IAAK,MAAMC,KAAQ7B,EACZiB,EAAUY,KAAOZ,EAAUY,GAAQ7B,EAAK6B"}