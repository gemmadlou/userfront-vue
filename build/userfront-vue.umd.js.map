{"version":3,"file":"userfront-vue.umd.js","sources":["../src/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport AnyMod from \"@anymod/core\";\nimport Core from \"@userfront/core\";\n\nconst {\n  Singleton,\n  alias,\n  render,\n  processPage,\n  addScript1ToDocument,\n  createOrReturnPage,\n  checkPageAndUpdate,\n  executeCallbacks,\n  logErrorsAndTips,\n} = AnyMod;\n\nconst { registerUrlChangedEventListener, addInitCallback } = Core;\nalias.setAlias(\"Userfront\");\n\nSingleton.Opts.api = true;\n\n/**\n * The order of operations is:\n *  1. Userfront.init() is called\n *  2. Callback is fired that adds Script1 to document and sets Singleton.isScript1Loading = true\n *  3. Userfront.build() is called\n *  4. componentDidMount() is called\n *  5. mountTools() is called\n *  6a. If Script1 hasn't loaded yet, wait for it to load\n *  6b. If Script1 has loaded, continue\n *  7. runAnyModSetup() is called\n */\n\n// Callback to fire whenever Userfront.init is called\naddInitCallback(({ tenantId }) => {\n  Singleton.External.project = tenantId;\n  addScript1ToDocument(\n    \"https://mod.userfront.com/v3/page/\",\n    tenantId,\n    runAnyModSetup\n  );\n});\n\nregisterUrlChangedEventListener();\n\nwindow.addEventListener(\"urlchanged\", render);\n\nasync function runAnyModSetup() {\n  if (Singleton.isScript1Loading) return;\n  try {\n    const page = await createOrReturnPage();\n    console.log(\"HERE\", page);\n    const updatedPage = await checkPageAndUpdate(page);\n    await processPage(updatedPage);\n    executeCallbacks();\n    logErrorsAndTips();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function mountTools() {\n  try {\n    runAnyModSetup();\n  } catch (err) {\n    let message = err && err.message ? err.message : \"Problem loading page\";\n    console.warn(message, err);\n  }\n}\n\nconst Userfront = {\n  build({ toolName, toolId }) {\n    return Vue.component(toolName, {\n      template: `<div><div id=\"userfront-${toolId}\"></div></div>`,\n      async mounted() {\n        await mountTools();\n      },\n    });\n  },\n};\n\nfor (const attr in Core) {\n  if (!Userfront[attr]) Userfront[attr] = Core[attr];\n}\n\nexport default Userfront;\n"],"names":["runAnyModSetup","Singleton","isScript1Loading","body","recover","result","createOrReturnPage","page","console","log","checkPageAndUpdate","updatedPage","processPage","executeCallbacks","logErrorsAndTips","e","then","error","alias","render","addScript1ToDocument","AnyMod","registerUrlChangedEventListener","addInitCallback","Core","setAlias","Opts","api","tenantId","External","project","window","addEventListener","Userfront","build","toolName","toolId","Vue","component","template","mounted","err","warn","message","mountTools","attr"],"mappings":"+fA+CeA,iBACb,GAAIC,EAAUC,iBAAkB,yBADF,QAmgBzB,SAAgBC,EAAMC,GAC5B,IACC,IAAIC,kBAlgBiBC,mBAAbC,GADJ,OAEFC,QAAQC,IAAI,OAAQF,mBACMG,EAAmBH,kBAAvCI,0BACAC,EAAYD,oBAClBE,IACAC,UA8fD,MAAMC,GACP,OAAOX,EAAQW,GAEhB,OAAIV,GAAUA,EAAOW,KACbX,EAAOW,UAAK,EAAQZ,GAErBC,cAngBGY,GACPT,QAAQC,IAAIQ,wGArDVhB,UACJA,EADIiB,MAEJA,EAFIC,OAGJA,EAHIP,YAIJA,EAJIQ,qBAKJA,EALId,mBAMJA,EANII,mBAOJA,EAPIG,iBAQJA,EARIC,iBASJA,GACEO,GAEEC,gCAAEA,EAAFC,gBAAmCA,GAAoBC,EAC7DN,EAAMO,SAAS,aAEfxB,EAAUyB,KAAKC,KAAM,EAerBJ,EAAgB,EAAGK,SAAAA,MACjB3B,EAAU4B,SAASC,QAAUF,EAC7BR,EACE,qCACAQ,EACA5B,KAIJsB,IAEAS,OAAOC,iBAAiB,aAAcb,GAyBtC,MAAMc,EAAY,CAChBC,MAAK,EAACC,SAAEA,EAAFC,OAAYA,KACTC,EAAIC,UAAUH,EAAU,CAC7BI,SAAW,2BAA0BH,kBAC/BI,6DAZV,IACExC,IACA,MAAOyC,GAEPjC,QAAQkC,KADMD,GAAOA,EAAIE,QAAUF,EAAIE,QAAU,uBAC3BF,GALE,4DAcdG,uBAHqB,uCASnC,IAAK,MAAMC,KAAQrB,EACZS,EAAUY,KAAOZ,EAAUY,GAAQrB,EAAKqB"}