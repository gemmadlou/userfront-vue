{"version":3,"file":"userfront-vue.umd.js","sources":["../src/index.js"],"sourcesContent":["import Vue from \"vue\";\nimport AnyMod from \"@anymod/core\";\nimport Core from \"@userfront/core\";\n\nconst {\n  Singleton,\n  alias,\n  render,\n  processPage,\n  addScript1ToDocument,\n  createOrReturnPage,\n  checkPageAndUpdate,\n  executeCallbacks,\n  logErrorsAndTips,\n} = AnyMod;\n\nconst { registerUrlChangedEventListener, addInitCallback } = Core;\nalias.setAlias(\"Userfront\");\n\nSingleton.Opts.api = true;\n\n/**\n * The order of operations is:\n *  1. Userfront.init() is called\n *  2. Callback is fired that adds Script1 to document and sets Singleton.isScript1Loading = true\n *  3. Userfront.build() is called\n *  4. componentDidMount() is called\n *  5. mountTools() is called\n *  6a. If Script1 hasn't loaded yet, wait for it to load\n *  6b. If Script1 has loaded, continue\n *  7. runAnyModSetup() is called\n */\n\n// Callback to fire whenever Userfront.init is called\naddInitCallback(({ tenantId }) => {\n  Singleton.External.project = tenantId;\n  addScript1ToDocument(\n    \"https://mod.userfront.com/v3/page/\",\n    tenantId,\n    runAnyModSetup\n  );\n});\n\nregisterUrlChangedEventListener();\n\nwindow.addEventListener(\"urlchanged\", render);\n\nasync function runAnyModSetup() {\n  if (Singleton.isScript1Loading) return;\n  try {\n    const page = await createOrReturnPage();\n    const updatedPage = await checkPageAndUpdate(page);\n    await processPage(updatedPage);\n    executeCallbacks();\n    logErrorsAndTips();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function mountTools() {\n  try {\n    runAnyModSetup();\n  } catch (err) {\n    let message = err && err.message ? err.message : \"Problem loading page\";\n    console.warn(message, err);\n  }\n}\n\nfunction build(name) {\n  return Vue.component(name, {\n    props: {\n      id: {\n        type: String,\n        required: true,\n      },\n    },\n    template: `<div><div id=\"userfront-${this.id}\"></div></div>`,\n    async mounted() {\n      await mountTools();\n    },\n  });\n}\n\nconst Userfront = {\n  build,\n  SignupForm: build(\"signup-form\"),\n  LoginForm: build(\"login-form\"),\n  PasswordResetForm: build(\"password-reset-form\"),\n  LogoutButton: build(\"logout-button\"),\n};\n\nfor (const attr in Core) {\n  if (!Userfront[attr]) Userfront[attr] = Core[attr];\n}\n\nexport default Userfront;\n"],"names":["runAnyModSetup","Singleton","isScript1Loading","body","recover","result","createOrReturnPage","page","checkPageAndUpdate","updatedPage","processPage","executeCallbacks","logErrorsAndTips","e","then","error","console","log","alias","render","addScript1ToDocument","AnyMod","registerUrlChangedEventListener","addInitCallback","Core","build","name","Vue","component","props","id","type","String","required","template","this","mounted","err","warn","message","mountTools","setAlias","Opts","api","tenantId","External","project","window","addEventListener","Userfront","SignupForm","LoginForm","PasswordResetForm","LogoutButton","attr"],"mappings":"+fA+CeA,iBACb,GAAIC,EAAUC,iBAAkB,yBADF,QAmgBzB,SAAgBC,EAAMC,GAC5B,IACC,IAAIC,kBAlgBiBC,mBAAbC,0BACoBC,EAAmBD,kBAAvCE,0BACAC,EAAYD,oBAClBE,IACAC,UA+fD,MAAMC,GACP,OAAOT,EAAQS,GAEhB,OAAIR,GAAUA,EAAOS,KACbT,EAAOS,UAAK,EAAQV,GAErBC,cApgBGU,GACPC,QAAQC,IAAIF,wGApDVd,UACJA,EADIiB,MAEJA,EAFIC,OAGJA,EAHIT,YAIJA,EAJIU,qBAKJA,EALId,mBAMJA,EANIE,mBAOJA,EAPIG,iBAQJA,EARIC,iBASJA,GACES,GAEEC,gCAAEA,EAAFC,gBAAmCA,GAAoBC,EAqD7D,SAASC,EAAMC,GACb,OAAOC,EAAIC,UAAUF,EAAM,CACzBG,MAAO,CACLC,GAAI,CACFC,KAAMC,OACNC,UAAU,IAGdC,SAAW,2BAA0BC,KAAKL,mBACpCM,6DAjBR,IACEpC,IACA,MAAOqC,GAEPrB,QAAQsB,KADMD,GAAOA,EAAIE,QAAUF,EAAIE,QAAU,uBAC3BF,GALE,4DAmBhBG,uBATiB,sCArD7BtB,EAAMuB,SAAS,aAEfxC,EAAUyC,KAAKC,KAAM,EAerBpB,EAAgB,EAAGqB,SAAAA,MACjB3C,EAAU4C,SAASC,QAAUF,EAC7BxB,EACE,qCACAwB,EACA5C,KAIJsB,IAEAyB,OAAOC,iBAAiB,aAAc7B,GAuCtC,MAAM8B,EAAY,CAChBxB,MAAAA,EACAyB,WAAYzB,EAAM,eAClB0B,UAAW1B,EAAM,cACjB2B,kBAAmB3B,EAAM,uBACzB4B,aAAc5B,EAAM,kBAGtB,IAAK,MAAM6B,KAAQ9B,EACZyB,EAAUK,KAAOL,EAAUK,GAAQ9B,EAAK8B"}